html5是html最新的修订版本,2014年10月由万维网联盟(w3c)完成标准制定,设计目的是为了在移动设备上支持多媒体

html5是下一代html标准
html5仍处于完善之中,大部分现代浏览器已经具备了某些html5支持

新特性:
	用于绘画的canvas元素
	用于媒介回放的video和audio元素
	对本地离线存储的更好的支持
	新的特殊内容元素,比如: article、footer、header、nav、section
	新的表单控件,比如: calendar、date、time、email、url、search

新增语义元素:
	
	article: 定义页面独立的内容区域
	aisde:   定义页面侧边栏的内容
	command: 定义命令按钮,如单选按钮、复选框
	dialog:  定义对话框,提示框
	figure:  规定独立的流内容(图像、照片、代码等)
	figcaption: figure元素的标题
	footer:  定义section或document的页脚
	header:  定义文档的头部区域
	mark:    定义带有记号的文本
	nav:     定义导航链接的部分
	progress: 定义任何内容任务的进度
	section:  定义文档中的节
	time:     定义日期或时间
	wbr:       规定在文本中何处合适添加换行符

浏览器对无法识别的元素会作为内联元素自动处理(ie8及更早ie浏览器不支持,需要引入外部资源)

新增表单元素:
	datalist: 定义选项列表。与input元素配合使用,定义input可能的值

Canvas: 逐像素渲染
html5Canvas: 用于图形的绘制,通过脚本(通常是js)来完成
	
	js绘制:
		//找到canvas元素
		var c = document.querySelector('canvas');

		//创建context对象 getContext('2d')对象是内建的html5对象,拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法
		var ctx = c.getContext('2d');

		//该值可以是css颜色、渐变或者图案,默认是黑色
		ctx.fillStyle = "red";

		//fillRect(x,y,width,height)定义矩形当前的填充方式
		ctx.fillRect(0,0,150,75);

canvas路径: 
	moveTo(x,y): 定义线条的开始坐标
	lineTo(x,y): 定义线条的结束坐标
	绘制线条必须使用link的方法,就像stroke()

绘制圆形:
	使用arc(x,y,r,start,stop)绘制圆形
	ctx.beginPath();
	ctx.arc(95,50,40,0,2*Math.PI);
	ctx.stroke();

绘制文本:
	font: 定义字体
	fillText(text,x,y),绘制实心字体
	strokeText(text,x,y),绘制空心字体


canvas渐变: 填充在矩形、圆形、线条等
		
	createLinearGradient(x, y, x1, y1)-创建线条渐变(开始点、结束点的x和y坐标)
	cerateRadialGradient(x, y, r, x1, y1, r1)-创建径向/圆渐变

	addColorStop()方法指定颜色停止,参数使用坐标来描述;stop介于 0.0 与 1.0 之间的值，表示渐变中开始与结束之间的位置。
	使用渐变设置fillStyle或者strokeStyle的值为渐变

canvas图像:
		
		把一幅画像放到画布上
		drawImage(image, x, y);

HTML5内联SVG: svg表示可缩放矢量图,是基于可扩展标记语言(标准通用标记语言的子集),用于描述二维矢量图形的一种图形格式,在2003年1月14日成为w3c推荐标准

svg: 
		指可伸缩矢量图形
		用于定义网络的基于矢量的图形
		使用XML格式定义图形
		图像在放大或改变尺寸的情况下图形质量不会有损失
		是万维网联盟的标准
		与DOM和XSL之类的w3c标准是一个整体

svg优势:
		可通过文本编辑器来创建和修改
		可被搜索、索引、脚本化或压缩
		可伸缩
		在任何分辨率下被高质量地打印
		在图像质量不下降的情况下被放大


MathML: html5中可以使用MathML元素,<math></math>;是数学标记语言,基于XML(标准通用标记语言的子集)的标准

html5拖放(drag和drop):
		1.设置元素可拖动,设置draggable为true
		
		2.规定当元素被拖动时,会发生什么
		ondragstart调用函数,drag(event),规定被拖动的数据
		dataTransfer.setData()方法设置被托数据的数据类型和值
		
		3.放到何处ondragover
		ondragover规定在何处放置被拖动的元素;默认无法将数据/元素放置到其他元素中,需要放置必须阻止对元素的默认处理方式;
		通过调用ondragover事件的event.preventDefault()方法

		4.当放置被拖数据时,会发生drop事件
		ondrop属性调用dorp(event),drop事件默认行为是以链接形式打开
		通过dataTransfer.getData()获得相同类型数据


html5地理定位:
	Geolocation(地理定位)用于定位用户的位置

	使用geolocation.getCurrentPosition()方法来获得用户的位置,第一个参数用于执行成功的处理,第二个参数用于错误处理

	其他方法:
	watchPosition: 返回用户当前位置,并继续返回用户移动时的更新位置,如同汽车上的GPS

	clearWatch: 停止watchPosition的方法

html5video:
	属性:
		paused: 是否暂停
		width: 宽度

	方法:
		play: 播放
		pause: 暂停

html5 audio：
	control属性供添加播放、暂停和音量控件

html5 input类型:
	不支持的话会显示为文本域
	color: 用于选色
	date: 允许从一个日期选择器选择一个日期
	datetime: 选择一个日期和时间(UTC时间)
	datetime-local: 选择一个日期和时间
	email: 用于应该包含emial的输入域,提交表单时会自动验证
	month: 选择月和年
	number: 数字输入域,可以设置min和max属性限制数字的输入,step设置数字间隔,value默认值
	range: 用于包含一定范围内的数字值输入域,显示为滑动条
	search: 用于搜索域
	tel: 定义输入电话号码字段
	time: 选择一个时间
	url: 用于包含url地址的输入域,提交表单时会自动验证url域的值

html5 表单元素
	datalist: 规定输入域的选项列表,规定form或input域应该拥有自动完成功能

	keygen: 作用是提供一种验证用户的可靠方法,规定用于表单的密钥对生成器字段;当提交表单时,会生成两个键,一个私钥,一个公钥
	,私钥存储于客户端,公钥则被发送到服务器,公钥可用于之后验证用户的客户端证书 

	output元素: 用于不同类型的输出,比如计算或脚本输出

html5 表单属性
	
	autocomplete: 规定form或input域拥有自动完成功能,on是打开,off是关闭
	novalidate: 规定在提交表单时不验证form或input域

	autofocus: 是一个boolean属性,规定在页面加载时,域自动的获得焦点
	form: 规定输入域所在的一个或多个表单,需引用一个以上表单,使用空格分隔
	formaction: 会覆盖form元素中的action属性
	formenctype: 描述表单提交到服务器的数据编码(只对form表单中,method="post"表单),覆盖表单中的enctype属性

	formmethod: 定义表单提交的方式,覆盖表单中的method属性,可与type="submit",type="image"配合使用
	formtarget: 指定一个名称或找一个关键字来指明表单提交数据接收后的展示,覆盖form的target属性,可与submit和image配合使用
	height和width: 规定用于image类型的input标签图像的高度和宽度
	list: 规定输入域的datalist
	min和max: min、max、step属性用于为把包含数字或日期的input类型规定限定
	multiple: 是一个boolean值,规定input元素中可以选择多个值,适用于emial、file等
	pattern: 描述了一个正则表达式用于验证input元素的值
	placeholder: 提供一种提示(hint),描述输入域的期待值
	required： 一个boolean值,规定不能为空
	step: 为输入域规定的合法数字间隔

html5语义元素: 清楚的定义了它的内容;不会给页面在视觉上造成改变,只是提供HTML文档的结构,供计算机和开发者读取和阅读
	
	section: 定义文档中的节(区段)。比如章节、页眉、页脚或文档中的其他部分
	article: 定义独立的内容
	nav: 定义导航链接部分,用于定义页面导航链接部分,但是不是所有的链接都需要包含在nav元素中
	aside: 定义页面主区域之外的内容(比如侧边栏),内容应该与主区域内容相关
	header: 描述文档的头部区域,用于定义内容的介绍展示区域,页面中可以使用多个header元素
	footer: 描述文档底部区域,应该包含它包含的元素,一个页脚应该包含文档的作者、著作权信息、链接的使用条款、联系信息等,一个页面可以使用多个footer元素
	figure和figcaption: figure规定独立的流内容(图像、图表、照片、代码等),内容应该与主内容相关,但是如果删除则不应对文档流产生影响;
	figcaption定义figure元素的标题,figcaption应被置于figure元素的第一个或最后一个子元素的位置

html5 web存储: 可以在本地存储用户的浏览数据,可以存储大量数据,而不影响网站的性能
html5之前主要使用cookies存储,缺点：需要在请求头上带数据,存储大小只有4k之内


html5 web sql: 是在浏览器上模拟数据库,可以用js来操作sql完成数据的读写;web sql数据库 api是独立的规范

html5应用程序缓存：通过创建cache manifest文件,可以轻松创建web应用的离线版本
	启用应用程序缓存,html标签中包含manifest属性
	<html manifest="demo.appcache"></html>
	每个指定了mainfest的页面在用户对其访问时都会被缓存,如果未指定mainfest属性则不会缓存(处分在mainfest文件中直接指定了该页面)
	manifest文件的建议文件扩展名是".appcache"

manifest文件,分为三个部分(告知浏览器缓存和不缓存的内容):
	1.CACHE MANIFEST - 在此标题下列出的文件将在首次下载后进行缓存(必需)
	2.NETWORK - 此标题下的文件需要与服务器连接,且不会被缓存
	3.FALLBACK - 此标题下的文件当页面无法访问时的回退页面(比如404页面)
	ex:
		# 以'#'开头的是注释,更改注释也可以使浏览器重新缓存,更改版本号或者日期来达到更新缓存的目的
		CACHE MANIFEST
		/theme.css

		//第一个uri是资源,第二个是替补
		FALLBACK
		/html/ /offline.html

	更新缓存: 一旦应用被缓存,会保存到缓存发生下列情况
	1.用户清空浏览器缓存
	2.manifest文件被修改()
	3.由程序来更新应用缓存

	注意:
		一旦文件被缓存,则浏览器会继续展示已缓存的版本,即使修改了服务器的文件,为确保浏览器更新缓存,需要更新manifest文件
		浏览器对缓存数据的容量限制可能不一样(某些浏览器设置的限制是每个站点5MB)