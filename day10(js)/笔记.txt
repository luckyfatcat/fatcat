js运算符:
	算术运算符:
		-: 可将字符串转换为数字

	关系运算符:
	大小关系检测:
		操作规则:
		
			1.仅一个数为数值,将另一个数转换为数值进行比较
			2.字符串间的比较,逐字符比较他们的unicode数值
			3.字符串与非数值比较,将运算数转换为字符串进行比较
			4.运算数既非数字也非字符串,转换为数值或字符串后进行比较
			5.运算数无法转换为数值或字符串,返回值为false
			6.与NaN的比较,返回值为false

	等值关系关系检测:
		相等比较:
			对象调用valueOf()转换为基本类型
			字符串与数值比较,字符串转换为数值
			对象属于同一对象则相等

		相同比较:
			比较原则: 引用类型比较,比较他们的引用值(内存地址)

	对象运算符:
		in: 判断左侧运算数是否为右侧运算数的成员
		instancesof: 判断对象实例是否属于某个类或构造函数
		new: 根据构造函数创建一个新的对象,并初始化该对象
		delete: 删除指定对象的属性,数组元素或变量
		.及[]: 存取对象或数组元素
		(): 函数调用,改变运算运算符优先级等

	逻辑运算符:
		!逻辑非: 连续使用两次,可以将任意类型转换为布尔值类型

		&&逻辑与:
			第一个操作数是对象,返回第二个操作数
			第二个操作数是对象,第一个操作数为true时返回该对现象
			两个都是对象,返回第二个
			一个操作数是null,返回null
			一个是NaN,返回NaN
			一个是undefined,返回undefined

		||逻辑或:
			第一个操作数是对象,返回第一个操作数
			第一个操作数为false,返回第二个操作数
			两个操作数都是对象,返回第一个操作数
			两个操作数是null,返回null
			两个操作数是NaN,返回NaN
			两个数是undefined,返回undefined

	位运算符:

	其他运算符:
		void: 设置运算数的值,返回undefined作为表达式的值

js流程语句: 通过规定的语句,让程序代码有条件的按照一定的方式执行

	跳转语句:
		return
		continue:进入下一个迭代,只能用于循环的代码块
		break

	异常处理语句:
		thorw: 主动抛出异常
		try: 执行需要处理的代码段
		catch: 捕获异常
		finally: 后期处理

js标签:
	标记js代码,在语句前加上冒号,配合break(配合标签可以在js任何地方)和continue(只能在循环内)跳出
	 label:
	 statements

js类型转换:
	数据类型:
			string
			number
			boolean
			object
			function
		3种对象类型:
			Object
			Array
			Date
		2个不包含任何值的数据类型
			null
			undefined
	typeof操作符: 查看变量的数据类型
		NaN的数据类型是number
		未定义变量数据类型是undefined
		null数据类型是object

	constructor:返回所有js变量的构造函数
		可以通过 constructor.toString().indexOf("")来判断array和date

	js变量可以转换为新变量或其他数据类型:
		1.通过js函数
		2.通过js自身自动转换

	全局方法String():可用于任何类型的数字、字母、变量、表达式

	Number方法toString()有同样效果

	一元运算符可以将变量转换为数字,即使变量不能转换,值为NaN,仍是一个数字

	将日期转换为数字可以得到和getTime()相同效果

	自动转换类型Type Conversion：js尝试操作一个错误的数据类型时,会自动转换为正确额数据类型

		自动转换为字符串:
			当尝试输出一个对象或一个变量时,js会自动调用变量的toString()方法
	null: 表示什么都没有,只有一个值的特殊类型,表示一个空对象引用,当设置为null时,可以用来清空对象

	undefined: 是一个没有设置值的变量

js正则表达式:
	使用单个字符串来描述、匹配一些列符合某个句法规则的字符串搜索模式

	正则表达式是有一个字符序列化形成的搜索模式
	/pattern/modifiers

	字符串方法: search()检索指定子字符串,返回起始位置

	replace()用一些字符替换另一些字符

	正则表达式修饰符:
		i: 执行对大小写不敏感的匹配
		g: 执行全局匹配(查找所有匹配而非找到第一个后停止)
		m: 执行多行匹配

	正则表达式模式:
		[abc]:查找方括号之间的任何字符
		[0-9]:查找任何从0到9的数字
		(x|y):查找任何以|分隔的选项

		\d: 查找数字
		\s: 查找空白字符
		\b: 匹配单词边界
		\uxxxx: 查找十六进制数xxxx规定的unicode字符

		n+:匹配任何包含至少一个n
		n*:包含0个或多个n
		n？：包含0个或一个n
	使用RegExp对象: 预定义了属性和方法的正则表达式对象

	使用test():
		检测一个字符串是否匹配某个模式,如果字符串含有匹配的文本,则返回true,否则返回false

	exec(): 检索字符串中正则表达式的匹配,返回一个数组,存放匹配的结果,如果没有匹配,则返回null

	compile():既可以改变检索模式,也可以添加或删除第二个参数

保留关键字是表达成为将来的关键字而保留的单词,保留关键字不能作为变量、标签、函数名

html事件句柄:
	onerror onsubmit

js json: json是用于存储和传输数据的格式,通常用于服务端向网页传递数据;全称JavaScript Object Notation,是一种轻量级的数据交换格式,是独立的语言

href="#"包含了位置信息,默认锚点是#top网页上端
href="javascript:void(0)";表示一个死链接
javascript:void(0):void()代表不返回任何值

